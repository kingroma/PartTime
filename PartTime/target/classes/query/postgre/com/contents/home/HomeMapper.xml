<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="parttime.pt.com.contents.home.mapper.HomeMapper">
	<select id='listVideo' resultType="HomeVO">
		SELECT 
			VIDEO_ID , 
			CASE WHEN LENGTH(VIDEO_NM) > 15 THEN SUBSTR(VIDEO_NM,1,15) || '...' ELSE VIDEO_NM END AS VIDEO_NM  ,
			VIDEO_CN ,
			VIDEO_IMAGE ,
			VIDEO_URL , 
			VIDEO_MINI_URL ,
			
			VIDEO_CNT ,
			TO_CHAR(RGS_DT,'YYYY-MM-DD HH24:MI:SS') AS RGS_DE , 
			TO_CHAR(UPD_DT,'YYYY-MM-DD HH24:MI:SS') AS UPD_DE  
			 
		FROM TB_CT_VIDEO V
		
		ORDER BY RGS_DT DESC 
	</select>
	
	<select id='viewVideo' resultType="HomeVO">
		SELECT 
			VIDEO_ID , 
			CASE WHEN LENGTH(VIDEO_NM) > 15 THEN SUBSTR(VIDEO_NM,1,15) || '...' ELSE VIDEO_NM END AS VIDEO_NM  ,
			VIDEO_CN ,
			VIDEO_IMAGE ,
			VIDEO_URL , 
			VIDEO_MINI_URL ,
			
			VIDEO_CNT ,
			TO_CHAR(RGS_DT,'YYYY-MM-DD HH24:MI:SS') AS RGS_DE , 
			TO_CHAR(UPD_DT,'YYYY-MM-DD HH24:MI:SS') AS UPD_DE ,
			
			-- VIDEO GOOD AT
			(SELECT COUNT(VGB.*) FROM TB_CT_VIDEO_GOOD_BAD VGB 
				WHERE V.VIDEO_ID = VGB.VIDEO_ID AND VGB.USER_ID = #{suserId} AND VGB.GOOD_AT = 'Y' ) AS GOOD_AT ,
			-- VIDEO BAD AT
			(SELECT COUNT(VGB.*) FROM TB_CT_VIDEO_GOOD_BAD VGB 
				WHERE V.VIDEO_ID = VGB.VIDEO_ID AND VGB.USER_ID = #{suserId} AND VGB.BAD_AT = 'Y' ) AS BAD_AT 
			 
		FROM TB_CT_VIDEO V
		WHERE V.VIDEO_ID = #{videoId}
		ORDER BY RGS_DT DESC 
	</select>
	
	<insert id='insertVideoGoodBad'>
		MERGE INTO TB_CT_VIDEO_GOOD_BAD V1
		USING DUAL V2
		ON ( V1.VIDEO_ID = #{videoId} AND V1.USER_ID = #{userId} )
		WHEN MATCHED THEN
			UPDATE SET 
				GOOD_AT = #{goodAt} ,
				BAD_AT = #{badAt} ,
				RGS_DT = NOW()
				
		WHEN NOT MATCHED THEN 
			INSERT (VIDEO_ID , USER_ID , GOOD_AT , BAD_AT , RGS_DT )
			VALUES (#{videoId},#{userId},#{goodAt},#{badAt},NOW()) 
		;
	</insert>
	
	<select id='listVideoReply' resultType="HomeVO">
		SELECT
			VR.VIDEO_ID , 
			VR.REPLY_ID , 
			VR.USER_ID , 
			U1.USER_NM , 
			U1.USER_NICK ,
			VR.REPLY_TEXT , 
			TO_CHAR(VR.RGS_DT,'YYYY-MM-DD HH24:MI:SS') AS RGS_DE 
		FROM TB_CT_VIDEO_REPLY VR 
		LEFT OUTER JOIN TB_CO_USER U1
		ON U1.USER_ID = VR.USER_ID 
		WHERE VIDEO_ID = #{videoId}
	</select>
	
	<insert id='insertVideoReply'>
		<!-- RPLY_0001 -->
		<selectKey order="BEFORE" resultType="String" keyProperty="videoId">
			SELECT 'RPLY_' || LPAD(( SELECT CASE 
				WHEN MAX(SUBSTRING(REPLY_ID,6,4)) IS NULL THEN '0' 
				ELSE MAX(SUBSTRING(REPLY_ID,6,4)) END 
			FROM TB_CT_VIDEO_REPLY ),4,'0') AS VIDEO_ID
		</selectKey>
		INSERT INTO TB_CT_VIDEO_REPLY (
			VIDEO_ID , 
			REPLY_ID , 
			USER_ID , 
			REPLY_TEXT , 
			RGS_DT 
		)VALUES (){
			#{videoId},
			#{replyId},
			#{userId},
			#{replyText},
			NOW()			
		}
	</insert>
</mapper>